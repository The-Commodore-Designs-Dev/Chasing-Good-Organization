type Submission @model @auth(rules: [{allow: public, operations: [create, read]}]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: AWSPhone
  nominatingOptions: String!
  organizationName: String!
  individualFullName: String!
  otherDescription: String!
  county: [NJCounty!] @connection(keyName: "bySubmission", fields: ["id"])
  category: AWSJSON
  uploadedVideo: String!
  referenceOne: [Reference!] @connection(keyName: "bySubmission", fields: ["id"])
  referenceTwo: [Reference!] @connection(keyName: "bySubmission", fields: ["id"])
  disclaimerAgreement: Boolean!
  voted: [Vote!] @connection(keyName: "bySubmission", fields: ["id"])
  date: AWSDate!
  story: String!
}

type NJCounty @model @key(name: "bySubmission", fields: ["countyID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  countyID: ID!
}

type Reference @model @auth(rules: [{allow: public, operations: [create, read]}]) @key(name: "bySubmission", fields: ["referenceID"]) {
  name: String!
  email: String!
  phoneNumber: String!
  referenceID: ID!
}

type Vote @model @key(name: "bySubmission", fields: ["voteID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  voted: Boolean!
  totalVotesEarned: Int!
  maxVotesPossible: Int!
  judges: [Judge!] @connection(keyName: "byJudge", fields: ["id"])
  voteID: ID!
}

type Judge @model @key(name: "byJudge", fields: ["judgeID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  username: String!
  judgeID: ID!
}
 